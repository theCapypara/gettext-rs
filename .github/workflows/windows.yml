name: Build & test on Windows

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 5" # At 00:00 every Friday

jobs:
  build_and_test_windows:
    runs-on: windows-2022
    env:
      # Disable progress bar in Cargo. This cuts down on output, avoiding log length limits.
      TERM: dumb

    strategy:
      fail-fast: false
      matrix:
        include:
          - rust-version: stable
            env:
              TARGET: x86_64-pc-windows-msvc
            name: "x86_64, Rust stable"
          - rust-version: stable
            env:
              TARGET: i686-pc-windows-gnu
            name: "i686, Rust stable"
          - rust-version: beta
            env:
              TARGET: x86_64-pc-windows-msvc
            name: "x86_64, Rust beta"
          - rust-version: nightly
            env:
              TARGET: i686-pc-windows-gnu
            name: "x86_64, Rust nightly"

    name: ci/run.sh on ${{ matrix.name }}

    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust-version }}

        # setup-rust-action turns panic messages in tests into GitHub
        # annotations. Our test suite is running with --verbose, and prints out
        # messages even for panics that we do expect. setup-rust-action can't
        # know about this though, and floods the UI with annotations. This
        # command disables annotations for tests.
      - name: Disable GitHub Annotations
        run: echo '::remove-matcher owner=cargo-test::'

      - name: Add appropriate target to Cargo
        run: rustup target add ${{ matrix.env.TARGET }}
        if: ${{ ! matrix.env.NO_ADD }}

      - name: Check out the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # required for successfully fetching gettext :(
          submodules: recursive

      - name: Generate lockfile
        run: cargo generate-lockfile

      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          key: ${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
      - run: |
          chcp 65001 #set code page to utf-8
          echo ("TARGET=${{ matrix.env.TARGET }}") >> $env:GITHUB_ENV
      - name: ./ci/run.sh
        run: sh ci/run.sh
